upstream nunaserver {
    server nunaserver:8080;
}

upstream nunaweb {
    server nunaweb:8080;
}

upstream minio {
    server minio:9000;
}

server {
    listen 80;
    server_name nunaweb.uavcan.org;

    location / {
        return 301 https://nunaweb.uavcan.org$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /etc/letsencrypt/webroot;
    }
}

server {
    server_name nunaweb.uavcan.org;
    listen 443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/nunaweb.uavcan.org/cert.pem;
    ssl_certificate_key /etc/letsencrypt/live/nunaweb.uavcan.org/privkey.pem;

    ssl_protocols TLSv1.2;
    ssl_ciphers 'EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    charset utf-8;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificates /etc/letsencrypt/live/nunaweb.uavcan.org/cert.pem;

    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header Content-Security-Policy "default-src 'self'; font-src *;img-src * data:; script-src *; style-src *;"
    add_header Referrer-Policy "strict-origin";
    add_header X-Content-Type-Options nosniff;
    add_header Permissions-Policy "geolocation=();midi=();notifications=();push=();sync-xhr=();microphone=();camera=();magnetometer=();gyroscope=();speaker=(self);vibrate=();fullscreen=(self);payment=();";
    
    location = /favicon.ico {
        return 204;
        access_log     off;
        log_not_found  off;
    }

    location / {
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;

        proxy_pass http://nunaweb/;
        health_check;
    }

    location = /api {
        return 302 /api/;
    }

    location /api/ {
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;

        proxy_pass http://nunaserver/;
        health_check;
    }

    location = /api/storage {
        return 302 /api/storage/;
    }

    location /api/storage/ {
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;

        proxy_pass http://minio/;
        health_check;
    }
}
