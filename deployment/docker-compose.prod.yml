version: "3"

services:
  proxy:
    image: uavcan/nunaweb-proxy:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt
    depends_on:
      nunaserver:
        condition: service_healthy
      nunaweb:
        condition: service_started

  celery:
    image: uavcan/nunaweb-server:latest
    restart: always
    environment:
      - CELERY_BROKER_URL=redis://redis
      - CELERY_RESULT_BACKEND=redis://redis
      - NS_MINIO_URL=minio:9000
      - NS_MINIO_RESULTS=https://nunaweb.uavcan.org/api/storage/results # Change
      - NS_MINIO_ACCESS_KEY=nunaweb
      - NS_MINIO_SECRET_KEY=supersecurepassword
      - NS_REDIS_RESULT=redis://redis
      - NS_REDIS_BROKER=redis://redis:6379/0
      - NS_LOG_LEVEL=40
    command: [ "celery", "-A", "nunaserver.generator", "worker", "--loglevel=info" ]

  nunaserver:
    image: uavcan/nunaweb-server:latest
    restart: always
    environment:
      - CORS_ALLOWED_DOMAINS=https://nunaweb.uavcan.org
      - CSRF_SECRET_KEY=csrf_secret
      - NS_UPLOAD_FOLDER=/nunaserver/uploads
      - NS_REDIS_RESULT=redis://redis
      - NS_REDIS_BROKER=redis://redis:6379/0
      - NS_MINIO_URL=minio:9000
      - NS_MINIO_RESULTS=https://nunaweb.uavcan.org/api/storage/results # Change
      - NS_MINIO_ACCESS_KEY=nunaweb
      - NS_MINIO_SECRET_KEY=supersecurepassword
      - NS_LOG_LEVEL=40
    command: [ "gunicorn", "-w 4", "-b 0.0.0.0:8080", "nunaserver.wsgi:app" ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 1s
      timeout: 3s
      retries: 60
    depends_on: 
      minio:
        condition: service_healthy
      redis:
        condition: service_started
  nunaweb:
    image: uavcan/nunaweb-web:latest
    environment:
      - API_URL="https://nunaweb.uavcan.org/api/"     # Set to URL; see also /nunaweb/Dockerfile
      - HOST=nunaweb
      - PORT=8080
    command: [ "npm", "run", "start" ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 1s
      timeout: 3s
      retries: 60
    depends_on:
      nunaserver:
        condition: service_healthy

  redis:
    image: redis:latest
    restart: always

  minio:
    image: minio/minio:latest
    restart: always
    volumes:
      - /var/lib/nunaweb:/data
    environment:
      - MINIO_ROOT_USER=nunaweb
      - MINIO_ROOT_PASSWORD=supersecurepassword                 # Change
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

