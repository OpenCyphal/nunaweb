version: "3"

services:
  proxy:
    image: ubuntu:latest
    restart: always
    ports:
      - "80:8080"
    volumes:
      - static:/var/www/static/api/static
  celery:
    image: ubuntu:latest
    environment:
      - CELERY_BROKER_URL=redis://redis
      - CELERY_RESULT_BACKEND=redis://redis
      - NS_MINIO_URL=minio:9000
      - NS_MINIO_RESULTS=http://localhost:8000/api/storage/results # Change
      - NS_MINIO_ACCESS_KEY=nunaweb
      - NS_MINIO_SECRET_KEY=supersecurepassword
      - NS_REDIS_RESULT=redis://redis
      - NS_REDIS_BROKER=redis://redis:6379/0
      - NS_LOG_LEVEL=40
    volumes:
      - static:/nunaserver/static
    command: [ "celery", "-A", "nunaserver.generator", "worker", "--loglevel=info" ]
  nunaserver:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - NS_UPLOAD_FOLDER=/nunaserver/uploads
      - NS_REDIS_RESULT=redis://redis
      - NS_REDIS_BROKER=redis://redis:6379/0
      - NS_MINIO_URL=minio:9000
      - NS_MINIO_RESULTS=http://localhost:8000/api/storage/results # Change
      - NS_MINIO_ACCESS_KEY=nunaweb
      - NS_MINIO_SECRET_KEY=supersecurepassword
      - NS_LOG_LEVEL=40
    command: [ "gunicorn", "-w 4", "-b 0.0.0.0:8080", "nunaserver.wsgi:app" ]
  nunaweb:
    image: ubuntu:latest
  minio:
    image: minio/minio:latest
    volumes:
      - ./data:/data
    environment:
      # CHANGE THIS
      MINIO_ROOT_USER: nunaweb
      MINIO_ROOT_PASSWORD: supersecurepassword
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  redis:
    image: redis:latest

volumes:
  static:
